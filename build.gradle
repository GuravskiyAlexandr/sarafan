buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}



plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'letscode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

task buildFront(type: YarnTask) {
	args = ['build']
}

yarn_install.dependsOn(yarn_cache_clean)
buildFront.dependsOn(yarn_install)
processResources.dependsOn(buildFront)

repositories {
	mavenCentral()
}
//перед деплоем устанавливам для нодаheroku login
node {
	download = true
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'

//	annotationProcessor('org.projectlombok:lombok')
//	compileOnly('org.projectlombok:lombok')
//	testAnnotationProcessor('org.projectlombok:lombok')
//	testCompileOnly('org.projectlombok:lombok')
//	compile('org.projectlombok:lombok')
	compileOnly 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok:1.18.8'

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile("org.springframework.boot:spring-boot-starter-websocket")

	compile 'org.jsoup:jsoup:1.12.1'


	compile('mysql:mysql-connector-java')

	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.0.RELEASE')

    compile("org.springframework.boot:spring-boot-starter-thymeleaf")

}
